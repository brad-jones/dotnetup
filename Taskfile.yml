# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev
version: "3"

dotenv: [".env"]

tasks:
  init:
    desc: Setup dev env
    cmds:
      - lefthook install -f
      - git config pull.rebase true
      - git config core.editor "code --wait"
      - git config commit.template "$PWD/.gitmsgtpl"
      - deno run -A ./.tasks/install-dotnet.ts
      - dotnet tool restore
      - dotnet restore

  fmt:
    desc: Runs dprint & dotnet format in fix mode
    cmds:
      - dprint fmt
      - dotnet format style -v d
      - dotnet format analyzers -v d

  lint:
    desc: Runs cog, dprint & dotnet format in check mode
    cmds:
      - cog check
      - dprint check
      - dotnet format style -v d --verify-no-changes
      - dotnet format analyzers -v d --verify-no-changes

  build:
    desc: Builds either an AOT or Self-Contained binary for the given architecture.
    vars:
      PUBLISH_PROFILE: '{{.PUBLISH_PROFILE | default "Aot"}}'
      DOTNET_ARCH: '{{.DOTNET_ARCH | default "x64"}}'
      NEXT_VERSION:
        sh: deno run -qA ./.tasks/next-version.ts
    cmds:
      - >-
          dotnet publish ./src/dotnetup.csproj
          -c Release
          -o ./bin
          -a {{.DOTNET_ARCH}}
          -p:PublishProfile={{.PUBLISH_PROFILE}}
          -p:Version={{.NEXT_VERSION}}
      - rm -rf ./bin/dotnetup.dbg ./bin/dotnetup.dSYM ./bin/dotnetup.pdb || true

  package:
    desc: This is triggered by cog as a pre_bump_hook to generate all the final publishable artifacts
    cmds:
      - mkdir -p ./publish
      - task: gzip-bins
      - task: stage-gzipped-bins
      - task: generate-digests
      - task: build-conda-packages

  build-conda-packages:
    internal: true
    requires:
      vars:
        - VERSION
    cmds:
      - { task: rattler-build, vars: { OS: linux, ARCH: x64, PROFILE: Aot, PLATFORM: linux-64 } }
      - { task: rattler-build, vars: { OS: linux, ARCH: arm64, PROFILE: SelfContained, PLATFORM: linux-aarch64 } }
      - { task: rattler-build, vars: { OS: win, ARCH: x64, PROFILE: Aot, PLATFORM: win-64 } }
      - { task: rattler-build, vars: { OS: win, ARCH: arm64, PROFILE: SelfContained, PLATFORM: win-arm64 } }
      - { task: rattler-build, vars: { OS: osx, ARCH: x64, PROFILE: Aot, PLATFORM: osx-64 } }
      - { task: rattler-build, vars: { OS: osx, ARCH: arm64, PROFILE: Aot, PLATFORM: osx-arm64 } }

  rattler-build:
    internal: true
    requires:
      vars:
        - OS
        - ARCH
        - PROFILE
        - VERSION
        - PLATFORM
    vars:
      DESCRIPTION:
        sh: cat ./CHANGELOG.md
    env:
      SRC_PATH: "../bin/{{.OS}}-{{.ARCH}}-{{.PROFILE}}"
      VERSION: "{{.VERSION}}"
      DESCRIPTION: "{{.DESCRIPTION}}"
    cmds:
      - >-
          rattler-build build
          -r ./rattler-recipe/recipe.yaml
          --target-platform {{.PLATFORM}}
          --test native

  gzip-bins:
    internal: true
    cmds:
      - gzip -k ./bin/linux-x64-Aot/dotnetup
      - gzip -k ./bin/linux-x64-SelfContained/dotnetup
      - gzip -k ./bin/linux-arm64-SelfContained/dotnetup
      - gzip -k ./bin/osx-x64-Aot/dotnetup
      - gzip -k ./bin/osx-x64-SelfContained/dotnetup
      - gzip -k ./bin/osx-arm64-Aot/dotnetup
      - gzip -k ./bin/osx-arm64-SelfContained/dotnetup
      - gzip -k ./bin/win-x64-Aot/dotnetup.exe
      - gzip -k ./bin/win-x64-SelfContained/dotnetup.exe
      - gzip -k ./bin/win-arm64-SelfContained/dotnetup.exe

  stage-gzipped-bins:
    internal: true
    cmds:
      - mv ./bin/linux-x64-Aot/dotnetup.gz ./publish/dotnetup-linux-64-Aot.gz
      - mv ./bin/linux-x64-SelfContained/dotnetup.gz ./publish/dotnetup-linux-64-SelfContained.gz
      - mv ./bin/linux-arm64-SelfContained/dotnetup.gz ./publish/dotnetup-linux-aarch64-SelfContained.gz
      - mv ./bin/osx-x64-Aot/dotnetup.gz ./publish/dotnetup-osx-64-Aot.gz
      - mv ./bin/osx-x64-SelfContained/dotnetup.gz ./publish/dotnetup-osx-64-SelfContained.gz
      - mv ./bin/osx-arm64-Aot/dotnetup.gz ./publish/dotnetup-osx-arm64-Aot.gz
      - mv ./bin/osx-arm64-SelfContained/dotnetup.gz ./publish/dotnetup-osx-arm64-SelfContained.gz
      - mv ./bin/win-x64-Aot/dotnetup.exe.gz ./publish/dotnetup-win-64-Aot.exe.gz
      - mv ./bin/win-x64-SelfContained/dotnetup.exe.gz ./publish/dotnetup-win-64-SelfContained.exe.gz
      - mv ./bin/win-arm64-SelfContained/dotnetup.exe.gz ./publish/dotnetup-win-arm64-SelfContained.exe.gz

  generate-digests:
    internal: true
    dir: ./publish
    cmd: sha256sum * > dotnetup-checksums.txt

  publish:
    desc: This is triggered by cog as a post_bump_hook to publish all the final publishable artifacts
    cmds:
      - git push && git push --tags
      - cog changelog --at v{{ .VERSION }} > GITHUB_CHANGELOG.md
      - gh release create v{{ .VERSION }} -F GITHUB_CHANGELOG.md ./publish/*
      - task: pixi-publish

  pixi-publish:
    internal: true
    sources:
      - output/**/*.conda
    cmds:
      - for: sources
        cmd: rattler-build upload prefix -c brads-forge {{.ITEM}}
