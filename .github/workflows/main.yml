on: { push: { branches: [master] } }

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è Setup Build Deps
        uses: ./.github/actions/setup-deps

      - name: ‚õî Lint Source Code
        run: task lint

  build:
    name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.profile }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { runner: ubuntu-latest, os: linux, arch: x64, profile: "Aot" }
          - { runner: ubuntu-latest, os: linux, arch: x64, profile: "SelfContained" }
          - { runner: ubuntu-latest, os: linux, arch: arm64, profile: "SelfContained" }
          - { runner: windows-latest, os: win, arch: x64, profile: "Aot" }
          - { runner: windows-latest, os: win, arch: x64, profile: "SelfContained" }
          - { runner: windows-latest, os: win, arch: arm64, profile: "SelfContained" }
          - { runner: macos-13, os: osx, arch: x64, profile: "Aot" }
          - { runner: macos-13, os: osx, arch: x64, profile: "SelfContained" }
          - { runner: macos-14, os: osx, arch: arm64, profile: "Aot" }
          - { runner: macos-14, os: osx, arch: arm64, profile: "SelfContained" }
    steps:
      - name: ‚¨áÔ∏è Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è Setup Build Deps
        uses: ./.github/actions/setup-deps

      - name: üì¶ Build binaries
        env:
          DOTNET_ARCH: ${{ matrix.arch }}
          PUBLISH_PROFILE: ${{ matrix.profile }}
        run: task build

      - name: ‚¨ÜÔ∏è Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.profile }}
          path: bin/**/*
          compression-level: 0
          if-no-files-found: error
          retention-days: 1

  publish:
    needs: [lint, build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      packages: write
      attestations: write
    steps:
      - name: ‚¨áÔ∏è Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚è¨ Download binaries
        uses: actions/download-artifact@v4
        with:
          path: ./bin

      - name: ‚öôÔ∏è Setup Build Deps
        uses: ./.github/actions/setup-deps

      - name: üöÄ Publish Release
        run: cog bump --auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üîë Upload Attestations
        uses: actions/attest-build-provenance@v2
        if: ${{ hashFiles('./publish/**/*') != '' }}
        with:
          subject-path: |
            ./publish/**/*
            ./output/**/*.conda
