on: { push: { branches: [master] } }

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./global.json
      - run: dotnet tool restore
      - uses: robinraju/release-downloader@v1.8
        with:
          repository: "mvdan/sh"
          fileName: "shfmt_*_linux_amd64"
          tag: "v3.7.0"
          out-file-path: "./.tools"
      - uses: robinraju/release-downloader@v1.8
        with:
          repository: "go-task/task"
          fileName: "task_linux_amd64.tar.gz"
          tag: "v3.33.1"
          extract: true
          out-file-path: "./.tools"
      - uses: robinraju/release-downloader@v1.8
        with:
          repository: "dprint/dprint"
          fileName: "dprint-x86_64-unknown-linux-gnu.zip"
          tag: "0.45.0"
          extract: true
          out-file-path: "./.tools"
      - uses: robinraju/release-downloader@v1.8
        with:
          repository: "cocogitto/cocogitto"
          fileName: "cocogitto-*-x86_64-unknown-linux-musl.tar.gz"
          tag: "6.0.1"
          extract: true
          out-file-path: "./.tools"
      - run: |
          mv ./.tools/shfmt_*_linux_amd64 ./.tools/shfmt
          mv ./.tools/x86_64-unknown-linux-musl/cog ./.tools/cog
          chmod +x ./.tools/cog
          chmod +x ./.tools/task
          chmod +x ./.tools/dprint
          chmod +x ./.tools/shfmt
          echo "$PWD/.tools" >> $GITHUB_PATH
      - run: task lint

  build_test:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-latest
            os: linux
          - runner: windows-latest
            os: windows
          - runner: macos-latest
            os: darwin
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with: { global-json-file: ./global.json }
      - uses: robinraju/release-downloader@v1.8
        with:
          repository: "go-task/task"
          fileName: "task_linux_amd64.tar.gz"
          tag: "v3.33.1"
          extract: true
          out-file-path: "./.tools"
      - uses: robinraju/release-downloader@v1.8
        with:
          repository: "cocogitto/cocogitto"
          fileName: "cocogitto-*-x86_64-unknown-linux-musl.tar.gz"
          tag: "6.0.1"
          extract: true
          out-file-path: "./.tools"
      - run: |
          mv ./.tools/x86_64-unknown-linux-musl/cog ./.tools/cog
          chmod +x ./.tools/cog
          chmod +x ./.tools/task
          echo "$PWD/.tools" >> $GITHUB_PATH
      - run: task test
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-x64-aot
          path: bin/x64-aot/*
          compression-level: 0
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-x64-sc
          path: bin/x64-sc/*
          compression-level: 0
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-arm64-sc
          path: bin/arm64-sc/*
          compression-level: 0
          if-no-files-found: error

  publish:
    needs: [lint, build_test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: { path: ./bin }
      - uses: robinraju/release-downloader@v1.8
        with:
          repository: "cocogitto/cocogitto"
          fileName: "cocogitto-*-x86_64-unknown-linux-musl.tar.gz"
          tag: "6.0.1"
          extract: true
          out-file-path: "./.tools"
      - run: |
          mv ./.tools/x86_64-unknown-linux-musl/cog ./.tools/cog
          chmod +x ./.tools/cog
          echo "$PWD/.tools" >> $GITHUB_PATH
      - run: cog bump --auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
